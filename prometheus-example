apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  creationTimestamp: '2021-11-08T10:36:21Z'
  generation: 5
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: openshift-monitoring
    app.kubernetes.io/version: 2.26.1
    prometheus: k8s
  managedFields:
    - apiVersion: monitoring.coreos.com/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.kubernetes.io/version': {}
            'f:prometheus': {}
        'f:spec':
          'f:podMetadata':
            .: {}
            'f:annotations':
              .: {}
              'f:target.workload.openshift.io/management': {}
            'f:labels':
              .: {}
              'f:app.kubernetes.io/component': {}
              'f:app.kubernetes.io/name': {}
              'f:app.kubernetes.io/part-of': {}
              'f:app.kubernetes.io/version': {}
          'f:serviceMonitorNamespaceSelector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:openshift.io/cluster-monitoring': {}
          'f:arbitraryFSAccessThroughSMs': {}
          'f:rules':
            .: {}
            'f:alert': {}
          'f:version': {}
          'f:volumes': {}
          'f:containers': {}
          'f:image': {}
          'f:storage':
            .: {}
            'f:volumeClaimTemplate':
              .: {}
              'f:metadata': {}
              'f:spec':
                .: {}
                'f:resources':
                  .: {}
                  'f:requests':
                    .: {}
                    'f:storage': {}
                'f:storageClassName': {}
              'f:status': {}
          'f:podMonitorSelector': {}
          'f:tolerations': {}
          'f:retention': {}
          'f:ruleNamespaceSelector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:openshift.io/cluster-monitoring': {}
          'f:priorityClassName': {}
          'f:configMaps': {}
          .: {}
          'f:secrets': {}
          'f:ruleSelector': {}
          'f:replicas': {}
          'f:externalUrl': {}
          'f:listenLocal': {}
          'f:resources':
            .: {}
            'f:requests':
              .: {}
              'f:cpu': {}
              'f:memory': {}
          'f:podMonitorNamespaceSelector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:openshift.io/cluster-monitoring': {}
          'f:nodeSelector':
            .: {}
            'f:node-role.kubernetes.io/infra': {}
          'f:serviceAccountName': {}
          'f:serviceMonitorSelector': {}
          'f:thanos':
            .: {}
            'f:image': {}
            'f:resources':
              .: {}
              'f:requests':
                .: {}
                'f:cpu': {}
                'f:memory': {}
            'f:version': {}
          'f:alerting':
            .: {}
            'f:alertmanagers': {}
          'f:securityContext':
            .: {}
            'f:fsGroup': {}
            'f:runAsNonRoot': {}
            'f:runAsUser': {}
          'f:probeSelector': {}
          'f:affinity':
            .: {}
            'f:podAntiAffinity':
              .: {}
              'f:preferredDuringSchedulingIgnoredDuringExecution': {}
          'f:probeNamespaceSelector':
            .: {}
            'f:matchLabels':
              .: {}
              'f:openshift.io/cluster-monitoring': {}
      manager: operator
      operation: Update
      time: '2021-11-08T16:20:04Z'
  name: k8s
  namespace: openshift-monitoring
  resourceVersion: '164182'
  uid: 4d720695-748f-48f9-a5a3-42b918f49453
spec:
  nodeSelector:
    node-role.kubernetes.io/infra: ''
  serviceAccountName: prometheus-k8s
  secrets:
    - kube-etcd-client-certs
    - prometheus-k8s-tls
    - prometheus-k8s-proxy
    - prometheus-k8s-htpasswd
    - prometheus-k8s-thanos-sidecar-tls
    - kube-rbac-proxy
  externalUrl: 'https://prometheus-k8s-openshift-monitoring.apps.proddc.customs.go.id/'
  listenLocal: true
  serviceMonitorSelector: {}
  resources:
    requests:
      cpu: 70m
      memory: 1Gi
  thanos:
    image: >-
      quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3e24409045a92286a278544d99ee4e818c753b14c869b8513da861b3745d83d4
    resources:
      requests:
        cpu: 1m
        memory: 100Mi
    version: 0.20.2
  podMonitorNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: 'true'
  alerting:
    alertmanagers:
      - apiVersion: v2
        bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        name: alertmanager-main
        namespace: openshift-monitoring
        port: web
        scheme: https
        tlsConfig:
          ca: {}
          caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
          cert: {}
          serverName: alertmanager-main.openshift-monitoring.svc
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: prometheus
                app.kubernetes.io/name: prometheus
                app.kubernetes.io/part-of: openshift-monitoring
                prometheus: k8s
            namespaces:
              - openshift-monitoring
            topologyKey: kubernetes.io/hostname
          weight: 100
  probeNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: 'true'
  securityContext:
    fsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
  probeSelector: {}
  containers:
    - args:
        - '-provider=openshift'
        - '-https-address=:9091'
        - '-http-address='
        - '-email-domain=*'
        - '-upstream=http://localhost:9090'
        - '-htpasswd-file=/etc/proxy/htpasswd/auth'
        - '-openshift-service-account=prometheus-k8s'
        - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
        - >-
          -openshift-delegate-urls={"/": {"resource": "namespaces", "verb":
          "get"}}
        - '-tls-cert=/etc/tls/private/tls.crt'
        - '-tls-key=/etc/tls/private/tls.key'
        - >-
          -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
        - '-openshift-ca=/etc/pki/tls/cert.pem'
        - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
      env:
        - name: HTTP_PROXY
          value: 'http://10.161.8.250:8080'
        - name: HTTPS_PROXY
          value: 'http://10.161.8.250:8080'
        - name: NO_PROXY
          value: >-
            .cluster.local,.proddc.customs.go.id,.svc,10.0.0.0/16,10.128.0.0/14,10.160.77.0/24,127.0.0.1,172.22.0.0/16,api-int.proddc.customs.go.id,localhost
      image: >-
        quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1877fd8c78f4f7999d65add7a86b0d7b66589752fc4118f9b1ae83e7de21cbdd
      name: prometheus-proxy
      ports:
        - containerPort: 9091
          name: web
          protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-k8s-tls
        - mountPath: /etc/proxy/secrets
          name: secret-prometheus-k8s-proxy
        - mountPath: /etc/proxy/htpasswd
          name: secret-prometheus-k8s-htpasswd
        - mountPath: /etc/pki/ca-trust/extracted/pem/
          name: prometheus-trusted-ca-bundle
          readOnly: true
    - args:
        - '--secure-listen-address=0.0.0.0:9092'
        - '--upstream=http://127.0.0.1:9095'
        - '--config-file=/etc/kube-rbac-proxy/config.yaml'
        - '--tls-cert-file=/etc/tls/private/tls.crt'
        - '--tls-private-key-file=/etc/tls/private/tls.key'
        - >-
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - '--logtostderr=true'
        - '--v=10'
      image: >-
        quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4a8cd126e3fdb2ad45c226cecd53ae9cdb7cf2f5cded9ee5fa5985a2a469cf3d
      name: kube-rbac-proxy
      ports:
        - containerPort: 9092
          name: tenancy
          protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-k8s-tls
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy
    - args:
        - '--insecure-listen-address=127.0.0.1:9095'
        - '--upstream=http://127.0.0.1:9090'
        - '--label=namespace'
      image: >-
        quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cc933d8c66900fb2ad7b3fea231b256f09d9d544e0ed5264079db4a67753390b
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
        - '--secure-listen-address=[$(POD_IP)]:10902'
        - '--upstream=http://127.0.0.1:10902'
        - '--tls-cert-file=/etc/tls/private/tls.crt'
        - '--tls-private-key-file=/etc/tls/private/tls.key'
        - >-
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - '--allow-paths=/metrics'
        - '--logtostderr=true'
      env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      image: >-
        quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:4a8cd126e3fdb2ad45c226cecd53ae9cdb7cf2f5cded9ee5fa5985a2a469cf3d
      name: kube-rbac-proxy-thanos
      ports:
        - containerPort: 10902
          name: thanos-proxy
          protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-k8s-thanos-sidecar-tls
    - args:
        - sidecar
        - '--prometheus.url=http://localhost:9090/'
        - '--tsdb.path=/prometheus'
        - '--grpc-address=[$(POD_IP)]:10901'
        - '--http-address=127.0.0.1:10902'
        - '--grpc-server-tls-cert=/etc/tls/grpc/server.crt'
        - '--grpc-server-tls-key=/etc/tls/grpc/server.key'
        - '--grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt'
      name: thanos-sidecar
      resources:
        requests:
          cpu: 1m
          memory: 25Mi
      volumeMounts:
        - mountPath: /etc/tls/grpc
          name: secret-grpc-tls
    - name: prometheus
      resources: {}
      volumeMounts:
        - mountPath: /etc/pki/ca-trust/extracted/pem/
          name: prometheus-trusted-ca-bundle
          readOnly: true
    - name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
  podMetadata:
    annotations:
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.26.1
  podMonitorSelector: {}
  serviceMonitorNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: 'true'
  rules:
    alert: {}
  arbitraryFSAccessThroughSMs: {}
  version: 2.26.1
  volumes:
    - name: secret-grpc-tls
      secret:
        secretName: prometheus-k8s-grpc-tls-eagk40k5uejj
    - configMap:
        items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle-2rsonso43rc5p
        optional: true
      name: prometheus-trusted-ca-bundle
  configMaps:
    - serving-certs-ca-bundle
    - kubelet-serving-ca-bundle
  image: >-
    quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5055a587f5f2cdf61d1d194a95220ae248e451eef8454b58c34c8a17131cfc80
  storage:
    volumeClaimTemplate:
      metadata: {}
      spec:
        resources:
          requests:
            storage: 100Gi
        storageClassName: infra-sc
      status: {}
  replicas: 2
  ruleSelector: {}
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/infra
      operator: Exists
  ruleNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: 'true'
  retention: 3d
  priorityClassName: system-cluster-critical
